import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

class Solution {
    class Trie {
        private Trie[] tries = new Trie[26];
        private int count = 0;

        public void insert(String p, int index) {
            if(index == p.length()) {
                return;
            }
            count++;
            int next = p.charAt(index) - 'a';
            if(tries[next] == null) {
                tries[next] = new Trie();
            }
            tries[next].insert(p, index + 1);
        }
        public int search(String p, int index) {
            if(index == p.length()) {
                return 1;
            }

            int result = 0;
            if(p.charAt(index) == '?') {
                result = count;
            }else {
                int next = p.charAt(index) - 'a';
                if(tries[next] != null) {
                    result = tries[next].search(p, index + 1);
                }
            }
            return result;
        }
    }
    public int[] solution(String[] words, String[] queries) {
        int[] answer = {};

        Trie[] trie = new Trie[10001];
        Trie[] revesedTrie = new Trie[10001];
        List<Integer> list = new ArrayList<>();

        for(int i = 1; i < 10001; i++) {
            trie[i] = new Trie();
            revesedTrie[i] = new Trie();
        }

        for(String word : words) {

            trie[word.length()].insert(word, 0);
            revesedTrie[word.length()].insert(new StringBuilder(word).reverse().toString(), 0);
        }

        for(String query : queries) {
            if(query.charAt(0) == '?') {
                list.add(revesedTrie[query.length()].search(new StringBuilder(query).reverse().toString(), 0));
            }else {
                list.add(trie[query.length()].search(query, 0));
            }
        }

        return answer = list.stream().mapToInt((a) -> a).toArray();
    }
}

/*********************************************************************/
https://programmers.co.kr/learn/courses/30/lessons/60060/solution_groups?language=java&page=1